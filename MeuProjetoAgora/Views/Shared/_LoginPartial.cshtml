@using Microsoft.AspNetCore.Identity
@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager

<ul class="nav navbar-nav navbar-right">
    @if (SignInManager.IsSignedIn(User))
    {
        <li>
            <a id="manage" class="nav-link text-dark glyphicon glyphicon-user" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">Oi, @UserManager.GetUserName(User) !</a>
        </li>
        <li>
            <form id="logoutForm" class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
                <button id="logout" type="submit" class="nav-link btn btn-link text-dark glyphicon glyphicon-off">Sair</button>
            </form>
        </li>
    }
    else
    {
        <li>
            <a class="nav-link text-dark glyphicon glyphicon-align-left" id="register" asp-area="Identity" asp-page="/Account/Register">Registrar</a>
        </li>
        
        <li class="nav-item">
            <a class="nav-link text-dark glyphicon glyphicon-log-in" id="login" asp-area="Identity" asp-page="/Account/Login">Entrar</a>
        </li>
    }
</ul>
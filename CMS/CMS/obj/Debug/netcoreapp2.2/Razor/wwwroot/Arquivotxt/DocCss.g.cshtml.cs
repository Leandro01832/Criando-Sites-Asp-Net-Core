#pragma checksum "D:\cms-clean\CMS\CMS\wwwroot\Arquivotxt\DocCss.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "c7f3e6c72de47a763ff80ac30175346ce86ae238"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.wwwroot_Arquivotxt_DocCss), @"mvc.1.0.view", @"/wwwroot/Arquivotxt/DocCss.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/wwwroot/Arquivotxt/DocCss.cshtml", typeof(AspNetCore.wwwroot_Arquivotxt_DocCss))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"c7f3e6c72de47a763ff80ac30175346ce86ae238", @"/wwwroot/Arquivotxt/DocCss.cshtml")]
    public class wwwroot_Arquivotxt_DocCss : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            BeginContext(0, 16963, true);
            WriteLiteral(@"#set($site = '')

#if($model.background.backgroundImage)

<style>
    
    .content {
        background-image: url($site$model.background.imagem.ArquivoImagem);
    }

    #pagina$model.Pagina.Id {
        background-image: url($site$model.background.imagem.ArquivoImagem);
    }
</style>

#elseif($model.background.Gradiente)

<style>
    .content {

         #set($um = 1)
         #foreach($Cores in $model.background.BackgroundGradiente.Cores)
         #if($um == 1)
        #set($back = $Cores.HexToColor($Cores.CorBackground))
        background: rgb($back); 
        #end
        #set($um = $um + 1)        
         #end


         #set($quantidade = $model.background.BackgroundGradiente.Cores.Count())
        background: -moz-linear-gradient(${model.background.BackgroundGradiente.Grau}deg,
        #foreach($Cor in $model.background.BackgroundGradiente.Cores)
         #set($Transparencia = $Cor.Transparencia / 10)
        rgba($Cor.HexToColor($Cor.CorBackground),$Transparenc");
            WriteLiteral(@"ia.toString().replace(',','.')) ${Cor.Position}%

            #if($velocityCount == $quantidade)
             );
        #else
            ,
            #end

        #end  

        background: -webkit-linear-gradient(${model.background.BackgroundGradiente.Grau}deg,
        #foreach($Cor in $model.background.BackgroundGradiente.Cores)
        #set($Transparencia = $Cor.Transparencia / 10)
        rgba($Cor.HexToColor($Cor.CorBackground),$Transparencia.toString().replace(',','.')) ${Cor.Position}%

        #if($velocityCount == $quantidade)
             );
        #else
            ,
            #end

        #end  

        background: linear-gradient(${model.background.BackgroundGradiente.Grau}deg,
        #foreach($Cor in $model.background.BackgroundGradiente.Cores)
        #set($Transparencia = $Cor.Transparencia / 10)
        rgba($Cor.HexToColor($Cor.CorBackground),$Transparencia.toString().replace(',','.')) ${Cor.Position}%

            #if($velocityCount == $quantidade)
  ");
            WriteLiteral(@"           );
        #else
             ,
            #end

        #end  

        filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#09e718',endColorstr='#1c8ea5',GradientType=1);
    }

    #pagina$model.Pagina.Id {

         #set($um = 1)
         #foreach($Cores in $model.background.BackgroundGradiente.Cores)
         #if($um == 1)
        #set($back = $Cores.HexToColor($Cores.CorBackground))
        background: rgb($back); 
        #end
        #set($um = $um + 1)        
         #end


         #set($quantidade = $model.background.BackgroundGradiente.Cores.Count())
        background: -moz-linear-gradient(${model.background.BackgroundGradiente.Grau}deg,
        #foreach($Cor in $model.background.BackgroundGradiente.Cores)
         #set($Transparencia = $Cor.Transparencia / 10)
        rgba($Cor.HexToColor($Cor.CorBackground),$Transparencia.toString().replace(',','.')) ${Cor.Position}%

            #if($velocityCount == $quantidade)
             );
       ");
            WriteLiteral(@" #else
            ,
            #end

        #end  

        background: -webkit-linear-gradient(${model.background.BackgroundGradiente.Grau}deg,
        #foreach($Cor in $model.background.BackgroundGradiente.Cores)
        #set($Transparencia = $Cor.Transparencia / 10)
        rgba($Cor.HexToColor($Cor.CorBackground),$Transparencia.toString().replace(',','.')) ${Cor.Position}%

        #if($velocityCount == $quantidade)
             );
        #else
            ,
            #end

        #end  

        background: linear-gradient(${model.background.BackgroundGradiente.Grau}deg,
        #foreach($Cor in $model.background.BackgroundGradiente.Cores)
        #set($Transparencia = $Cor.Transparencia / 10)
        rgba($Cor.HexToColor($Cor.CorBackground),$Transparencia.toString().replace(',','.')) ${Cor.Position}%

            #if($velocityCount == $quantidade)
             );
        #else
             ,
            #end

        #end  

        filter: progid:DXImageTransform.");
            WriteLiteral(@"Microsoft.gradient(startColorstr='#09e718',endColorstr='#1c8ea5',GradientType=1);
    }

</style>

#else

<style>
    .content {
        background-color: $model.background.Cor;
    }

    #pagina$model.Pagina.Id {
        background-color: $model.background.Cor;
    }
</style>

#end

#if($model.background_topo.backgroundImage)
<style>
    #topo$model.background_topo.Id {
        background-image: url($site$model.background_topo.imagem.ArquivoImagem);
        background-repeat: $model.background_topo.Background_Repeat;
    }
</style>

#elseif($model.background_topo.Gradiente)

<style>
    #topo$model.background_topo.Id {

         #set($um = 1)
         #foreach($Cores in $model.background_topo.BackgroundGradiente.Cores)
         #if($um == 1)
        #set($back = $Cores.HexToColor($Cores.CorBackground))
        background: rgb($back); 
        #end
        #set($um = $um + 1)        
         #end


         #set($quantidade = $model.background_topo.BackgroundGradien");
            WriteLiteral(@"te.Cores.Count())
        background: -moz-linear-gradient(${model.background_topo.BackgroundGradiente.Grau}deg,
        #foreach($Cor in $model.background_topo.BackgroundGradiente.Cores)
         #set($Transparencia = $Cor.Transparencia / 10)
        rgba($Cor.HexToColor($Cor.CorBackground),$Transparencia.toString().replace(',','.')) ${Cor.Position}%

            #if($velocityCount == $quantidade)
             );
        #else
            ,
            #end

        #end  

        background: -webkit-linear-gradient(${model.background_topo.BackgroundGradiente.Grau}deg,
        #foreach($Cor in $model.background_topo.BackgroundGradiente.Cores)
        #set($Transparencia = $Cor.Transparencia / 10)
        rgba($Cor.HexToColor($Cor.CorBackground),$Transparencia.toString().replace(',','.')) ${Cor.Position}%

        #if($velocityCount == $quantidade)
             );
        #else
            ,
            #end

        #end  

        background: linear-gradient(${model.background_to");
            WriteLiteral(@"po.BackgroundGradiente.Grau}deg,
        #foreach($Cor in $model.background_topo.BackgroundGradiente.Cores)
        #set($Transparencia = $Cor.Transparencia / 10)
        rgba($Cor.HexToColor($Cor.CorBackground),$Transparencia.toString().replace(',','.')) ${Cor.Position}%

            #if($velocityCount == $quantidade)
             );
        #else
             ,
            #end

        #end  

        filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#09e718',endColorstr='#1c8ea5',GradientType=1);
    }
</style>

#else

<style>
    #topo$model.background_topo.Id {
        background-color: $model.background_topo.Cor;
    }
</style>

#end

#if($model.background_menu.backgroundImage)

<style>
    #menu$model.background_menu.Id {
        background-image: url($site$model.background_menu.imagem.ArquivoImagem);
        background-repeat: $model.background_menu.Background_Repeat;
    }
</style>

#elseif($model.background_menu.Gradiente)

<style>
    #menu$mo");
            WriteLiteral(@"del.background_menu.Id {

         #set($um = 1)
         #foreach($Cores in $model.background_menu.BackgroundGradiente.Cores)
         #if($um == 1)
        #set($back = $Cores.HexToColor($Cores.CorBackground))
        background: rgb($back); 
        #end
        #set($um = $um + 1)        
         #end


         #set($quantidade = $model.background_menu.BackgroundGradiente.Cores.Count())
        background: -moz-linear-gradient(${model.background_menu.BackgroundGradiente.Grau}deg,
        #foreach($Cor in $model.background_menu.BackgroundGradiente.Cores)
         #set($Transparencia = $Cor.Transparencia / 10)
        rgba($Cor.HexToColor($Cor.CorBackground),$Transparencia.toString().replace(',','.')) ${Cor.Position}%

            #if($velocityCount == $quantidade)
             );
        #else
            ,
            #end

        #end  

        background: -webkit-linear-gradient(${model.background_menu.BackgroundGradiente.Grau}deg,
        #foreach($Cor in $model.backgroun");
            WriteLiteral(@"d_menu.BackgroundGradiente.Cores)
        #set($Transparencia = $Cor.Transparencia / 10)
        rgba($Cor.HexToColor($Cor.CorBackground),$Transparencia.toString().replace(',','.')) ${Cor.Position}%

        #if($velocityCount == $quantidade)
             );
        #else
            ,
            #end

        #end  

        background: linear-gradient(${model.background_menu.BackgroundGradiente.Grau}deg,
        #foreach($Cor in $model.background_menu.BackgroundGradiente.Cores)
        #set($Transparencia = $Cor.Transparencia / 10)
        rgba($Cor.HexToColor($Cor.CorBackground),$Transparencia.toString().replace(',','.')) ${Cor.Position}%

            #if($velocityCount == $quantidade)
             );
        #else
             ,
            #end

        #end  

        filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#09e718',endColorstr='#1c8ea5',GradientType=1);
    }
</style>

#else

<style>
    #menu$model.background_menu.Id {
        background-colo");
            WriteLiteral(@"r: $model.background_menu.Cor;
    }
</style>

#end

#if($model.background_borda_esquerda.backgroundImage)

<style>
    #bordaEsquerda$model.background_borda_esquerda.Id {
        background-image: url($site$model.background_borda_esquerda.imagem.ArquivoImagem);
        background-repeat: $model.background_borda_esquerda.Background_Repeat;
    }
</style>

#elseif($model.background_borda_esquerda.Gradiente)

<style>
    #bordaEsquerda$model.background_borda_esquerda.Id {

         #set($um = 1)
         #foreach($Cores in $model.background_borda_esquerda.BackgroundGradiente.Cores)
         #if($um == 1)
        #set($back = $Cores.HexToColor($Cores.CorBackground))
        background: rgb($back); 
        #end
        #set($um = $um + 1)        
         #end


         #set($quantidade = $model.background_borda_esquerda.BackgroundGradiente.Cores.Count())
        background: -moz-linear-gradient(${model.background_borda_esquerda.BackgroundGradiente.Grau}deg,
        #foreach($Cor");
            WriteLiteral(@" in $model.background_borda_esquerda.BackgroundGradiente.Cores)
         #set($Transparencia = $Cor.Transparencia / 10)
        rgba($Cor.HexToColor($Cor.CorBackground),$Transparencia.toString().replace(',','.')) ${Cor.Position}%

            #if($velocityCount == $quantidade)
             );
        #else
            ,
            #end

        #end  

        background: -webkit-linear-gradient(${model.background_borda_esquerda.BackgroundGradiente.Grau}deg,
        #foreach($Cor in $model.background_borda_esquerda.BackgroundGradiente.Cores)
        #set($Transparencia = $Cor.Transparencia / 10)
        rgba($Cor.HexToColor($Cor.CorBackground),$Transparencia.toString().replace(',','.')) ${Cor.Position}%

        #if($velocityCount == $quantidade)
             );
        #else
            ,
            #end

        #end  

        background: linear-gradient(${model.background_borda_esquerda.BackgroundGradiente.Grau}deg,
        #foreach($Cor in $model.background_borda_esquerda.Back");
            WriteLiteral(@"groundGradiente.Cores)
        #set($Transparencia = $Cor.Transparencia / 10)
        rgba($Cor.HexToColor($Cor.CorBackground),$Transparencia.toString().replace(',','.')) ${Cor.Position}%

            #if($velocityCount == $quantidade)
             );
        #else
             ,
            #end

        #end  

        filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#09e718',endColorstr='#1c8ea5',GradientType=1);
    }
</style>

#else

<style>
    #bordaEsquerda$model.background_borda_esquerda.Id {
        background-color: $model.background_borda_esquerda.Cor;
    }
</style>

#end

#if($model.background_borda_direita.backgroundImage)

<style>
    #bordaDireita$model.background_borda_direita.Id {
        background-image: url($site$model.background_borda_direita.imagem.ArquivoImagem);
        background-repeat: $model.background_borda_direita.Background_Repeat;
    }
</style>

#elseif($model.background_borda_direita.Gradiente)

<style>
    #bordaEsquer");
            WriteLiteral(@"da$model.background_borda_direita.Id {

         #set($um = 1)
         #foreach($Cores in $model.background_borda_direita.BackgroundGradiente.Cores)
         #if($um == 1)
        #set($back = $Cores.HexToColor($Cores.CorBackground))
        background: rgb($back); 
        #end
        #set($um = $um + 1)        
         #end


         #set($quantidade = $model.background_borda_direita.BackgroundGradiente.Cores.Count())
        background: -moz-linear-gradient(${model.background_borda_direita.BackgroundGradiente.Grau}deg,
        #foreach($Cor in $model.background_borda_direita.BackgroundGradiente.Cores)
         #set($Transparencia = $Cor.Transparencia / 10)
        rgba($Cor.HexToColor($Cor.CorBackground),$Transparencia.toString().replace(',','.')) ${Cor.Position}%

            #if($velocityCount == $quantidade)
             );
        #else
            ,
            #end

        #end  

        background: -webkit-linear-gradient(${model.background_borda_direita.BackgroundGra");
            WriteLiteral(@"diente.Grau}deg,
        #foreach($Cor in $model.background_borda_direita.BackgroundGradiente.Cores)
        #set($Transparencia = $Cor.Transparencia / 10)
        rgba($Cor.HexToColor($Cor.CorBackground),$Transparencia.toString().replace(',','.')) ${Cor.Position}%

        #if($velocityCount == $quantidade)
             );
        #else
            ,
            #end

        #end  

        background: linear-gradient(${model.background_borda_direita.BackgroundGradiente.Grau}deg,
        #foreach($Cor in $model.background_borda_direita.BackgroundGradiente.Cores)
        #set($Transparencia = $Cor.Transparencia / 10)
        rgba($Cor.HexToColor($Cor.CorBackground),$Transparencia.toString().replace(',','.')) ${Cor.Position}%

            #if($velocityCount == $quantidade)
             );
        #else
             ,
            #end

        #end  

        filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#09e718',endColorstr='#1c8ea5',GradientType=1);
    }
</sty");
            WriteLiteral(@"le>

#else

<style>
    #bordaDireita$model.background_borda_direita.Id {
        background-color: $model.background_borda_direita.Cor;
    }
</style>

#end

#if($model.background_bloco.backgroundImage)

<style>
    #blocos$model.background_bloco.Id {
        background-image: url($site$model.background_bloco.imagem.ArquivoImagem);
        background-repeat: $model.background_bloco.Background_Repeat;
    }
</style>

#elseif($model.background_bloco.Gradiente)

<style>
    #blocos$model.background_bloco.Id {

         #set($um = 1)
         #foreach($Cores in $model.background_bloco.BackgroundGradiente.Cores)
         #if($um == 1)
        #set($back = $Cores.HexToColor($Cores.CorBackground))
        background: rgb($back); 
        #end
        #set($um = $um + 1)        
         #end


         #set($quantidade = $model.background_bloco.BackgroundGradiente.Cores.Count())
        background: -moz-linear-gradient(${model.background_bloco.BackgroundGradiente.Grau}deg,
    ");
            WriteLiteral(@"    #foreach($Cor in $model.background_bloco.BackgroundGradiente.Cores)
         #set($Transparencia = $Cor.Transparencia / 10)
        rgba($Cor.HexToColor($Cor.CorBackground),$Transparencia.toString().replace(',','.')) ${Cor.Position}%

            #if($velocityCount == $quantidade)
             );
        #else
            ,
            #end

        #end  

        background: -webkit-linear-gradient(${model.background_bloco.BackgroundGradiente.Grau}deg,
        #foreach($Cor in $model.background_bloco.BackgroundGradiente.Cores)
        #set($Transparencia = $Cor.Transparencia / 10)
        rgba($Cor.HexToColor($Cor.CorBackground),$Transparencia.toString().replace(',','.')) ${Cor.Position}%

        #if($velocityCount == $quantidade)
             );
        #else
            ,
            #end

        #end  

        background: linear-gradient(${model.background_blobo.BackgroundGradiente.Grau}deg,
        #foreach($Cor in $model.background_bloco.BackgroundGradiente.Cores)
    ");
            WriteLiteral(@"    #set($Transparencia = $Cor.Transparencia / 10)
        rgba($Cor.HexToColor($Cor.CorBackground),$Transparencia.toString().replace(',','.')) ${Cor.Position}%

            #if($velocityCount == $quantidade)
             );
        #else
             ,
            #end

        #end  

        filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#09e718',endColorstr='#1c8ea5',GradientType=1);
    }
</style>

#else

<style>
    #blocos$model.background_bloco.Id {
        background-color: $model.background_bloco.Cor;
    }
</style>

#end");
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591

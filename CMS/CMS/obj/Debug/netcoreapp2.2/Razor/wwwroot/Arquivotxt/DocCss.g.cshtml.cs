#pragma checksum "D:\cms-clean\CMS\CMS\wwwroot\Arquivotxt\DocCss.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "62fc7c10a68a52eec8b97b33866f1abbdae9010e"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.wwwroot_Arquivotxt_DocCss), @"mvc.1.0.view", @"/wwwroot/Arquivotxt/DocCss.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/wwwroot/Arquivotxt/DocCss.cshtml", typeof(AspNetCore.wwwroot_Arquivotxt_DocCss))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"62fc7c10a68a52eec8b97b33866f1abbdae9010e", @"/wwwroot/Arquivotxt/DocCss.cshtml")]
    public class wwwroot_Arquivotxt_DocCss : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            BeginContext(0, 16174, true);
            WriteLiteral(@"#set($site = '')

#if($model.Div1.Div.Background.Tipo == ""BackgroundImagem"")

<style>    

    .content {
        background-image: url($site$model.Div1.Div.Background.RetornaImagem($model.Div1.Div.Background.Id));
    }
</style>

#elseif($model.Div1.Div.BackGround.Tipo == ""BackgroundGradiente"")

<style>
    .content {

         #set($um = 1)
         #foreach($Cores in $model.Div1.Div.Background.BackgroundGradiente.Cores)
         #if($um == 1)
        #set($back = $Cores.HexToColor($Cores.CorBackground))
        background: rgb($back); 
        #end
        #set($um = $um + 1)        
         #end


         #set($quantidade = $model.Div1.Div.Background.Cores.Count())
        background: -moz-linear-gradient(${model.Div1.Div.Background.Grau}deg,
        #foreach($Cor in $model.Div1.Div.Background.Cores)
         #set($Transparencia = $Cor.Transparencia / 10)
        rgba($Cor.HexToColor($Cor.CorBackground),$Transparencia.toString().replace(',','.')) ${Cor.Position}%

       ");
            WriteLiteral(@"     #if($velocityCount == $quantidade)
             );
        #else
            ,
            #end

        #end  

        background: -webkit-linear-gradient(${model.Div1.Div.Background.Grau}deg,
        #foreach($Cor in $model.Div1.Div.Background.Cores)
        #set($Transparencia = $Cor.Transparencia / 10)
        rgba($Cor.HexToColor($Cor.CorBackground),$Transparencia.toString().replace(',','.')) ${Cor.Position}%

        #if($velocityCount == $quantidade)
             );
        #else
            ,
            #end

        #end  

        background: linear-gradient(${model.Div1.Div.Background.Grau}deg,
        #foreach($Cor in $model.Div1.Div.Background.BackgroundGradiente.Cores)
        #set($Transparencia = $Cor.Transparencia / 10)
        rgba($Cor.HexToColor($Cor.CorBackground),$Transparencia.toString().replace(',','.')) ${Cor.Position}%

            #if($velocityCount == $quantidade)
             );
        #else
             ,
            #end

        #end  
");
            WriteLiteral(@"
        filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#09e718',endColorstr='#1c8ea5',GradientType=1);
    }

    #pagina$model.Pagina.Id {

         #set($um = 1)
         #foreach($Cores in $model.Div1.Div.Background.Cores)
         #if($um == 1)
        #set($back = $Cores.HexToColor($Cores.CorBackground))
        background: rgb($back); 
        #end
        #set($um = $um + 1)        
         #end


         #set($quantidade = $model.Div1.Div.Background.Cores.Count())
        background: -moz-linear-gradient(${model.Div1.Div.Background.Grau}deg,
        #foreach($Cor in $model.Div1.Div.Background.Cores)
         #set($Transparencia = $Cor.Transparencia / 10)
        rgba($Cor.HexToColor($Cor.CorBackground),$Transparencia.toString().replace(',','.')) ${Cor.Position}%

            #if($velocityCount == $quantidade)
             );
        #else
            ,
            #end

        #end  

        background: -webkit-linear-gradient(${model.Div1.Div.Backg");
            WriteLiteral(@"round.Grau}deg,
        #foreach($Cor in $model.Div1.Div.Background.Cores)
        #set($Transparencia = $Cor.Transparencia / 10)
        rgba($Cor.HexToColor($Cor.CorBackground),$Transparencia.toString().replace(',','.')) ${Cor.Position}%

        #if($velocityCount == $quantidade)
             );
        #else
            ,
            #end

        #end  

        background: linear-gradient(${model.Div1.Div.Background.Grau}deg,
        #foreach($Cor in $model.Div1.Div.Background.Cores)
        #set($Transparencia = $Cor.Transparencia / 10)
        rgba($Cor.HexToColor($Cor.CorBackground),$Transparencia.toString().replace(',','.')) ${Cor.Position}%

            #if($velocityCount == $quantidade)
             );
        #else
             ,
            #end

        #end  

        filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#09e718',endColorstr='#1c8ea5',GradientType=1);
    }

</style>

#else

<style>
    .content {
        background-color: $model.");
            WriteLiteral(@"Div1.Div.Background.Cor;
    }

    #pagina$model.Pagina.Id {
        background-color: $model.Div1.Div.Background.Cor;
    }
</style>

#end

#if($model.Div2.Div.Background.Tipo == ""BackgroundImagem"")
<style>
    #topo$model.background_topo.Id {
        background-image: url($site$model.Div2.Div.Background.RetornaImagem($model.Div1.Div.Background.Id));
        background-repeat: $model.Div2.Div.Background.Background_Repeat;
    }
</style>

#elseif($model.Div2.Div.Background.Tipo == ""BackgroundGradiente"")

<style>
    #topo$model.Div2.Div.Background.Id {

         #set($um = 1)
         #foreach($Cores in $model.Div2.Div.Background.Cores)
         #if($um == 1)
        #set($back = $Cores.HexToColor($Cores.CorBackground))
        background: rgb($back); 
        #end
        #set($um = $um + 1)        
         #end


         #set($quantidade = $model.Div2.Div.Background.Cores.Count())
        background: -moz-linear-gradient(${model.Div2.Div.Background.Grau}deg,
        #fo");
            WriteLiteral(@"reach($Cor in $model.Div2.Div.Background.Cores)
         #set($Transparencia = $Cor.Transparencia / 10)
        rgba($Cor.HexToColor($Cor.CorBackground),$Transparencia.toString().replace(',','.')) ${Cor.Position}%

            #if($velocityCount == $quantidade)
             );
        #else
            ,
            #end

        #end  

        background: -webkit-linear-gradient(${model.Div2.Div.Background.Grau}deg,
        #foreach($Cor in $model.Div2.Div.Background.Cores)
        #set($Transparencia = $Cor.Transparencia / 10)
        rgba($Cor.HexToColor($Cor.CorBackground),$Transparencia.toString().replace(',','.')) ${Cor.Position}%

        #if($velocityCount == $quantidade)
             );
        #else
            ,
            #end

        #end  

        background: linear-gradient(${model.Div2.Div.Background.Grau}deg,
        #foreach($Cor in $model.Div2.Div.Background.Cores)
        #set($Transparencia = $Cor.Transparencia / 10)
        rgba($Cor.HexToColor($Cor.CorBac");
            WriteLiteral(@"kground),$Transparencia.toString().replace(',','.')) ${Cor.Position}%

            #if($velocityCount == $quantidade)
             );
        #else
             ,
            #end

        #end  

        filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#09e718',endColorstr='#1c8ea5',GradientType=1);
    }
</style>

#else

<style>
    #topo$model.Div2.Div.Background.Id {
        background-color: $model.Div2.Div.Background.Cor;
    }
</style>

#end

#if($model.Div3.Div.Background.Tipo == ""BackgroundImagem"")

<style>
    #menu$model.Div3.Div.Background.Id {
        background-image: url($site$model.Div3.Div.Background.RetornaImagem($model.Div1.Div.Background.Id));
        background-repeat: $model.Div3.Div.Background.Background_Repeat;
    }
</style>

#elseif($model.Div3.Div.Background.Tipo == ""BackgroundGradiente"")

<style>
    #menu$model.Div3.Div.Background.Id {

         #set($um = 1)
         #foreach($Cores in $model.Div3.Div.Background.Cores)
    ");
            WriteLiteral(@"     #if($um == 1)
        #set($back = $Cores.HexToColor($Cores.CorBackground))
        background: rgb($back); 
        #end
        #set($um = $um + 1)        
         #end


         #set($quantidade = $model.Div3.Div.Background.Cores.Count())
        background: -moz-linear-gradient(${model.Div3.Div.Background.Grau}deg,
        #foreach($Cor in $model.Div3.Div.background.Cores)
         #set($Transparencia = $Cor.Transparencia / 10)
        rgba($Cor.HexToColor($Cor.CorBackground),$Transparencia.toString().replace(',','.')) ${Cor.Position}%

            #if($velocityCount == $quantidade)
             );
        #else
            ,
            #end

        #end  

        background: -webkit-linear-gradient(${model.Div3.Div.Background.Grau}deg,
        #foreach($Cor in $model.Div3.Div.Background.Cores)
        #set($Transparencia = $Cor.Transparencia / 10)
        rgba($Cor.HexToColor($Cor.CorBackground),$Transparencia.toString().replace(',','.')) ${Cor.Position}%

        #if");
            WriteLiteral(@"($velocityCount == $quantidade)
             );
        #else
            ,
            #end

        #end  

        background: linear-gradient(${model.Div3.Div.Background.Grau}deg,
        #foreach($Cor in $model.Div3.Div.Background.Cores)
        #set($Transparencia = $Cor.Transparencia / 10)
        rgba($Cor.HexToColor($Cor.CorBackground),$Transparencia.toString().replace(',','.')) ${Cor.Position}%

            #if($velocityCount == $quantidade)
             );
        #else
             ,
            #end

        #end  

        filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#09e718',endColorstr='#1c8ea5',GradientType=1);
    }
</style>

#else

<style>
    #menu$model.Div3.Div.Background.Id {
        background-color: $model.Div3.Div.Background.Cor;
    }
</style>

#end

#if($model.Div5.Div.Background.Tipo == ""BackgroundImagem"")

<style>
    #bordaEsquerda$model.background_borda_esquerda.Id {
        background-image: url($site$model.Div5.Div.B");
            WriteLiteral(@"ackground.RetornaImagem($model.Div1.Div.Background.Id));
        background-repeat: $model.Div5.Div.Background.Background_Repeat;
    }
</style>

#elseif($model.Div5.Div.Background.Tipo == ""BackgroundGradiente"")

<style>
    #bordaEsquerda$model.Div5.Div.Background.Id {

         #set($um = 1)
         #foreach($Cores in $model.Div5.Div.Background.Cores)
         #if($um == 1)
        #set($back = $Cores.HexToColor($Cores.CorBackground))
        background: rgb($back); 
        #end
        #set($um = $um + 1)        
         #end


         #set($quantidade = $model.Div5.Div.Background.Cores.Count())
        background: -moz-linear-gradient(${model.Div5.Div.Background.Grau}deg,
        #foreach($Cor in $model.Div5.Div.Background.Cores)
         #set($Transparencia = $Cor.Transparencia / 10)
        rgba($Cor.HexToColor($Cor.CorBackground),$Transparencia.toString().replace(',','.')) ${Cor.Position}%

            #if($velocityCount == $quantidade)
             );
        #else
   ");
            WriteLiteral(@"         ,
            #end

        #end  

        background: -webkit-linear-gradient(${model.Div5.Div.Background.Grau}deg,
        #foreach($Cor in $model.Div5.Div.Background.Cores)
        #set($Transparencia = $Cor.Transparencia / 10)
        rgba($Cor.HexToColor($Cor.CorBackground),$Transparencia.toString().replace(',','.')) ${Cor.Position}%

        #if($velocityCount == $quantidade)
             );
        #else
            ,
            #end

        #end  

        background: linear-gradient(${model.Div5.Div.Background.Grau}deg,
        #foreach($Cor in $model.Div5.Div.Background.Cores)
        #set($Transparencia = $Cor.Transparencia / 10)
        rgba($Cor.HexToColor($Cor.CorBackground),$Transparencia.toString().replace(',','.')) ${Cor.Position}%

            #if($velocityCount == $quantidade)
             );
        #else
             ,
            #end

        #end  

        filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#09e718',endColorstr=");
            WriteLiteral(@"'#1c8ea5',GradientType=1);
    }
</style>

#else

<style>
    #bordaEsquerda$model.Div5.Div.Background.Id {
        background-color: $model.Div5.Div.Background.Cor;
    }
</style>

#end

#if($model.Div6.Div.Background.Tipo == ""BackgroundImagem"")

<style>
    #bordaDireita$model.Div6.Div.Background.Id {
        background-image: url($site$model.Div6.Div.Background.RetornaImagem($model.Div1.Div.Background.Id));
        background-repeat: $model.Div6.Div.Background.Background_Repeat;
    }
</style>

#elseif($model.Div6.Div.Background.Tipo == ""BackgroundGradiente"")

<style>
    #bordaEsquerda$model.Div6.Div.Background.Id {

         #set($um = 1)
         #foreach($Cores in $model.Div6.Div.Background.Cores)
         #if($um == 1)
        #set($back = $Cores.HexToColor($Cores.CorBackground))
        background: rgb($back); 
        #end
        #set($um = $um + 1)        
         #end


         #set($quantidade = $model.Div6.Div.Background.Cores.Count())
        background");
            WriteLiteral(@": -moz-linear-gradient(${model.Div6.Div.Background.Grau}deg,
        #foreach($Cor in $model.Div6.Div.Background.Cores)
         #set($Transparencia = $Cor.Transparencia / 10)
        rgba($Cor.HexToColor($Cor.CorBackground),$Transparencia.toString().replace(',','.')) ${Cor.Position}%

            #if($velocityCount == $quantidade)
             );
        #else
            ,
            #end

        #end  

        background: -webkit-linear-gradient(${model.Div6.Div.Background.Grau}deg,
        #foreach($Cor in $model.Div6.Div.Background.Cores)
        #set($Transparencia = $Cor.Transparencia / 10)
        rgba($Cor.HexToColor($Cor.CorBackground),$Transparencia.toString().replace(',','.')) ${Cor.Position}%

        #if($velocityCount == $quantidade)
             );
        #else
            ,
            #end

        #end  

        background: linear-gradient(${model.Div6.Div.Background.Grau}deg,
        #foreach($Cor in $model.Div6.Div.Background.Cores)
        #set($Transpare");
            WriteLiteral(@"ncia = $Cor.Transparencia / 10)
        rgba($Cor.HexToColor($Cor.CorBackground),$Transparencia.toString().replace(',','.')) ${Cor.Position}%

            #if($velocityCount == $quantidade)
             );
        #else
             ,
            #end

        #end  

        filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#09e718',endColorstr='#1c8ea5',GradientType=1);
    }
</style>

#else

<style>
    #bordaDireita$model.Div6.Div.Background.Id {
        background-color: $model.Div6.Div.Background.Cor;
    }
</style>

#end

#if($model.Div4.Div.Background.Tipo == ""BackgroundImagem"")

<style>
    #blocos$model.background_bloco.Id {
        background-image: url($site$model.Div4.Div.Background.RetornaImagem($model.Div1.Div.Background.Id));
        background-repeat: $model.Div4.Div.Background.Background_Repeat;
    }
</style>

#elseif($model.Div4.Div.Background.Tipo == ""BackgroundGradiente"")

<style>
    #blocos$model.Div4.Div.Id {

         #set($um = ");
            WriteLiteral(@"1)
         #foreach($Cores in $model.Div4.Div.Cores)
         #if($um == 1)
        #set($back = $Cores.HexToColor($Cores.CorBackground))
        background: rgb($back); 
        #end
        #set($um = $um + 1)        
         #end


         #set($quantidade = $model.Div4.Div.Cores.Count())
        background: -moz-linear-gradient(${model.Div4.Div.Grau}deg,
        #foreach($Cor in $model.Div4.Div.Cores)
         #set($Transparencia = $Cor.Transparencia / 10)
        rgba($Cor.HexToColor($Cor.CorBackground),$Transparencia.toString().replace(',','.')) ${Cor.Position}%

            #if($velocityCount == $quantidade)
             );
        #else
            ,
            #end

        #end  

        background: -webkit-linear-gradient(${model.Div4.Div.Grau}deg,
        #foreach($Cor in $model.Div4.Div.Cores)
        #set($Transparencia = $Cor.Transparencia / 10)
        rgba($Cor.HexToColor($Cor.CorBackground),$Transparencia.toString().replace(',','.')) ${Cor.Position}%

      ");
            WriteLiteral(@"  #if($velocityCount == $quantidade)
             );
        #else
            ,
            #end

        #end  

        background: linear-gradient(${model.Div4.Div.Grau}deg,
        #foreach($Cor in $model.Div4.Div.Cores)
        #set($Transparencia = $Cor.Transparencia / 10)
        rgba($Cor.HexToColor($Cor.CorBackground),$Transparencia.toString().replace(',','.')) ${Cor.Position}%

            #if($velocityCount == $quantidade)
             );
        #else
             ,
            #end

        #end  

        filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#09e718',endColorstr='#1c8ea5',GradientType=1);
    }
</style>

#else

<style>
    #blocos$model.Div4.Div.Id {
        background-color: $model.Div4.Div.Background.Cor;
    }
</style>

#end");
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
